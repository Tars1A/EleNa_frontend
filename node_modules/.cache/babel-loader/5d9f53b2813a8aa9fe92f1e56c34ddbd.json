{"ast":null,"code":"import _slicedToArray from \"/Users/tarunpatra/Desktop/finalproj/elena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/tarunpatra/Desktop/finalproj/elena/src/components/Map/Index.js\";\nimport { useRef, useEffect, useState } from 'react';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport './Map.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nvar Map = function Map() {\n  var mapElement = useRef();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var _useState3 = useState(-0.112869),\n    _useState4 = _slicedToArray(_useState3, 2),\n    longitude = _useState4[0],\n    setLongitude = _useState4[1];\n  var _useState5 = useState(51.504),\n    _useState6 = _slicedToArray(_useState5, 2),\n    latitude = _useState6[0],\n    setLatitude = _useState6[1];\n  var convertToPoints = function convertToPoints(lngLat) {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n  var drawRoute = function drawRoute(geoJson, map) {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n  var addDeliveryMarker = function addDeliveryMarker(lngLat, map) {\n    var element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n  useEffect(function () {\n    var origin = {\n      lng: longitude,\n      lat: latitude\n    };\n    var destinations = [];\n    var map = tt.map({\n      key: 'xmYY8TlCQfJxFUw3nD4NehjmjBTQrcuQ',\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n    var addMarker = function addMarker() {\n      var popupOffset = {\n        bottom: [0, -25]\n      };\n      var popup = new tt.Popup({\n        offset: popupOffset\n      }).setHTML('This is you!');\n      var element = document.createElement('div');\n      element.className = 'marker';\n      var marker = new tt.Marker({\n        draggable: true,\n        element: element\n      }).setLngLat([longitude, latitude]).addTo(map);\n      marker.on('dragend', function () {\n        var lngLat = marker.getLngLat();\n        setLongitude(lngLat.lng);\n        setLatitude(lngLat.lat);\n      });\n      marker.setPopup(popup).togglePopup();\n    };\n    addMarker();\n    var sortDestinations = function sortDestinations(locations) {\n      var pointsForDestinations = locations.map(function (destination) {\n        return convertToPoints(destination);\n      });\n      var callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)]\n      };\n      return new Promise(function (resolve, reject) {\n        ttapi.services.matrixRouting(callParameters).then(function (matrixAPIResults) {\n          var results = matrixAPIResults.matrix[0];\n          var resultsArray = results.map(function (result, index) {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds\n            };\n          });\n          resultsArray.sort(function (a, b) {\n            return a.drivingtime - b.drivingtime;\n          });\n          var sortedLocations = resultsArray.map(function (result) {\n            return result.location;\n          });\n          resolve(sortedLocations);\n        });\n      });\n    };\n    var recalculateRoutes = function recalculateRoutes() {\n      sortDestinations(destinations).then(function (sorted) {\n        sorted.unshift(origin);\n        ttapi.services.calculateRoute({\n          key: process.env.REACT_APP_TOM_TOM_API_KEY,\n          locations: sorted\n        }).then(function (routeData) {\n          var geoJson = routeData.toGeoJson();\n          drawRoute(geoJson, map);\n        });\n      });\n    };\n    map.on('click', function (e) {\n      destinations.push(e.lngLat);\n      addDeliveryMarker(e.lngLat, map);\n      recalculateRoutes();\n    });\n    return function () {\n      return map.remove();\n    };\n  }, [longitude, latitude]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, map && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapElement,\n    className: \"map\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Where to?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"longitude\",\n    className: \"longitude\",\n    placeholder: \"Put in Longitude\",\n    onChange: function onChange(e) {\n      setLongitude(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"latitude\",\n    className: \"latitude\",\n    placeholder: \"Put in latitude\",\n    onChange: function onChange(e) {\n      setLatitude(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Map;","map":{"version":3,"names":["useRef","useEffect","useState","tt","ttapi","Map","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","origin","destinations","key","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","popupOffset","bottom","popup","Popup","offset","setHTML","marker","draggable","on","getLngLat","setPopup","togglePopup","sortDestinations","locations","pointsForDestinations","destination","callParameters","process","env","REACT_APP_TOM_TOM_API_KEY","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","e","push","remove","target","value"],"sources":["/Users/tarunpatra/Desktop/finalproj/elena/src/components/Map/Index.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport * as tt from '@tomtom-international/web-sdk-maps'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport './Map.css'\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\n\nconst Map = () => {\n  const mapElement = useRef()\n  const [map, setMap] = useState({})\n  const [longitude, setLongitude] = useState(-0.112869)\n  const [latitude, setLatitude] = useState(51.504)\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n  \n      }\n    })\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    })\n    .setLngLat(lngLat)\n    .addTo(map)\n  }\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n    const destinations = []\n\n    let map = tt.map({\n      key:'xmYY8TlCQfJxFUw3nD4NehjmjBTQrcuQ',\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [longitude, latitude],\n      zoom: 14,\n    })\n    setMap(map)\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      }\n      const popup = new tt.Popup({ offset: popupOffset }).setHTML('This is you!')\n      const element = document.createElement('div')\n      element.className = 'marker'\n\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element,\n      })\n        .setLngLat([longitude, latitude])\n        .addTo(map)\n      \n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat()\n        setLongitude(lngLat.lng)\n        setLatitude(lngLat.lat)\n      })\n\n      marker.setPopup(popup).togglePopup()\n      \n    }\n    addMarker()\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key: process.env.REACT_APP_TOM_TOM_API_KEY,\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n\n\n    map.on('click', (e) => {\n      destinations.push(e.lngLat)\n      addDeliveryMarker(e.lngLat, map)\n      recalculateRoutes()\n    })\n\n    return () => map.remove()\n  }, [longitude, latitude])\n\n  return (\n    <>\n      {map && (\n        <div className=\"app\">\n          <div ref={mapElement} className=\"map\" />\n          <div className=\"search-bar\">\n            <h1>Where to?</h1>\n            <input\n              type=\"text\"\n              id=\"longitude\"\n              className=\"longitude\"\n              placeholder=\"Put in Longitude\"\n              onChange={(e) => {\n                setLongitude(e.target.value)\n              }}\n            />\n            <input\n              type=\"text\"\n              id=\"latitude\"\n              className=\"latitude\"\n              placeholder=\"Put in latitude\"\n              onChange={(e) => {\n                setLatitude(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Map\n"],"mappings":";;;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,OAAO,KAAKC,KAAK,MAAM,wCAAwC;AAC/D,OAAO,WAAW;AAClB,OAAO,kDAAkD;AAEzD,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,IAAMC,UAAU,GAAGN,MAAM,EAAE;EAAA,gBACLE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA3BK,GAAG;IAAEC,MAAM;EAAA,iBACgBN,QAAQ,CAAC,CAAC,QAAQ,CAAC;IAAA;IAA9CO,SAAS;IAAEC,YAAY;EAAA,iBACER,QAAQ,CAAC,MAAM,CAAC;IAAA;IAAzCS,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,MAAM,EAAK;IAClC,OAAO;MACLC,KAAK,EAAE;QACLJ,QAAQ,EAAEG,MAAM,CAACE,GAAG;QACpBP,SAAS,EAAEK,MAAM,CAACG;MACpB;IACF,CAAC;EACH,CAAC;EAED,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,OAAO,EAAEZ,GAAG,EAAK;IAClC,IAAIA,GAAG,CAACa,QAAQ,CAAC,OAAO,CAAC,EAAE;MACzBb,GAAG,CAACc,WAAW,CAAC,OAAO,CAAC;MACxBd,GAAG,CAACe,YAAY,CAAC,OAAO,CAAC;IAC3B;IACAf,GAAG,CAACgB,QAAQ,CAAC;MACXC,EAAE,EAAE,OAAO;MACXC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;QACND,IAAI,EAAE,SAAS;QACfE,IAAI,EAAER;MACR,CAAC;MACDS,KAAK,EAAE;QACL,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE;MAEhB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIf,MAAM,EAAEP,GAAG,EAAK;IACzC,IAAMuB,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7CF,OAAO,CAACG,SAAS,GAAG,iBAAiB;IACrC,IAAI9B,EAAE,CAAC+B,MAAM,CAAC;MACZJ,OAAO,EAAEA;IACX,CAAC,CAAC,CACDK,SAAS,CAACrB,MAAM,CAAC,CACjBsB,KAAK,CAAC7B,GAAG,CAAC;EACb,CAAC;EAEDN,SAAS,CAAC,YAAM;IACd,IAAMoC,MAAM,GAAG;MACbpB,GAAG,EAAER,SAAS;MACdO,GAAG,EAAEL;IACP,CAAC;IACD,IAAM2B,YAAY,GAAG,EAAE;IAEvB,IAAI/B,GAAG,GAAGJ,EAAE,CAACI,GAAG,CAAC;MACfgC,GAAG,EAAC,kCAAkC;MACtCC,SAAS,EAAElC,UAAU,CAACmC,OAAO;MAC7BC,gBAAgB,EAAE;QAChBC,gBAAgB,EAAE,IAAI;QACtBC,WAAW,EAAE;MACf,CAAC;MACDC,MAAM,EAAE,CAACpC,SAAS,EAAEE,QAAQ,CAAC;MAC7BmC,IAAI,EAAE;IACR,CAAC,CAAC;IACFtC,MAAM,CAACD,GAAG,CAAC;IAEX,IAAMwC,SAAS,GAAG,SAAZA,SAAS,GAAS;MACtB,IAAMC,WAAW,GAAG;QAClBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;MACjB,CAAC;MACD,IAAMC,KAAK,GAAG,IAAI/C,EAAE,CAACgD,KAAK,CAAC;QAAEC,MAAM,EAAEJ;MAAY,CAAC,CAAC,CAACK,OAAO,CAAC,cAAc,CAAC;MAC3E,IAAMvB,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7CF,OAAO,CAACG,SAAS,GAAG,QAAQ;MAE5B,IAAMqB,MAAM,GAAG,IAAInD,EAAE,CAAC+B,MAAM,CAAC;QAC3BqB,SAAS,EAAE,IAAI;QACfzB,OAAO,EAAEA;MACX,CAAC,CAAC,CACCK,SAAS,CAAC,CAAC1B,SAAS,EAAEE,QAAQ,CAAC,CAAC,CAChCyB,KAAK,CAAC7B,GAAG,CAAC;MAEb+C,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,YAAM;QACzB,IAAM1C,MAAM,GAAGwC,MAAM,CAACG,SAAS,EAAE;QACjC/C,YAAY,CAACI,MAAM,CAACG,GAAG,CAAC;QACxBL,WAAW,CAACE,MAAM,CAACE,GAAG,CAAC;MACzB,CAAC,CAAC;MAEFsC,MAAM,CAACI,QAAQ,CAACR,KAAK,CAAC,CAACS,WAAW,EAAE;IAEtC,CAAC;IACDZ,SAAS,EAAE;IAEX,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,SAAS,EAAK;MACtC,IAAMC,qBAAqB,GAAGD,SAAS,CAACtD,GAAG,CAAC,UAACwD,WAAW,EAAK;QAC3D,OAAOlD,eAAe,CAACkD,WAAW,CAAC;MACrC,CAAC,CAAC;MACF,IAAMC,cAAc,GAAG;QACrBzB,GAAG,EAAE0B,OAAO,CAACC,GAAG,CAACC,yBAAyB;QAC1C7B,YAAY,EAAEwB,qBAAqB;QACnCM,OAAO,EAAE,CAACvD,eAAe,CAACwB,MAAM,CAAC;MACnC,CAAC;MAEH,OAAO,IAAIgC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtCnE,KAAK,CAACoE,QAAQ,CACXC,aAAa,CAACT,cAAc,CAAC,CAC7BU,IAAI,CAAC,UAACC,gBAAgB,EAAK;UAC1B,IAAMC,OAAO,GAAGD,gBAAgB,CAACE,MAAM,CAAC,CAAC,CAAC;UAC1C,IAAMC,YAAY,GAAGF,OAAO,CAACrE,GAAG,CAAC,UAACwE,MAAM,EAAEC,KAAK,EAAK;YAClD,OAAO;cACLC,QAAQ,EAAEpB,SAAS,CAACmB,KAAK,CAAC;cAC1BE,WAAW,EAAEH,MAAM,CAACI,QAAQ,CAACC,YAAY,CAACC;YAC5C,CAAC;UACH,CAAC,CAAC;UACFP,YAAY,CAACQ,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;YAC1B,OAAOD,CAAC,CAACL,WAAW,GAAGM,CAAC,CAACN,WAAW;UACtC,CAAC,CAAC;UACF,IAAMO,eAAe,GAAGX,YAAY,CAACvE,GAAG,CAAC,UAACwE,MAAM,EAAK;YACnD,OAAOA,MAAM,CAACE,QAAQ;UACxB,CAAC,CAAC;UACFX,OAAO,CAACmB,eAAe,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;MAC9B9B,gBAAgB,CAACtB,YAAY,CAAC,CAACoC,IAAI,CAAC,UAACiB,MAAM,EAAK;QAC9CA,MAAM,CAACC,OAAO,CAACvD,MAAM,CAAC;QAEtBjC,KAAK,CAACoE,QAAQ,CACXqB,cAAc,CAAC;UACdtD,GAAG,EAAE0B,OAAO,CAACC,GAAG,CAACC,yBAAyB;UAC1CN,SAAS,EAAE8B;QACb,CAAC,CAAC,CACDjB,IAAI,CAAC,UAACoB,SAAS,EAAK;UACnB,IAAM3E,OAAO,GAAG2E,SAAS,CAACC,SAAS,EAAE;UACrC7E,SAAS,CAACC,OAAO,EAAEZ,GAAG,CAAC;QAC3B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAGDA,GAAG,CAACiD,EAAE,CAAC,OAAO,EAAE,UAACwC,CAAC,EAAK;MACrB1D,YAAY,CAAC2D,IAAI,CAACD,CAAC,CAAClF,MAAM,CAAC;MAC3Be,iBAAiB,CAACmE,CAAC,CAAClF,MAAM,EAAEP,GAAG,CAAC;MAChCmF,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,OAAO;MAAA,OAAMnF,GAAG,CAAC2F,MAAM,EAAE;IAAA;EAC3B,CAAC,EAAE,CAACzF,SAAS,EAAEE,QAAQ,CAAC,CAAC;EAEzB,oBACE,0CACGJ,GAAG,iBACF;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,GAAG,EAAED,UAAW;IAAC,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACxC;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAkB,eAClB;IACE,IAAI,EAAC,MAAM;IACX,EAAE,EAAC,WAAW;IACd,SAAS,EAAC,WAAW;IACrB,WAAW,EAAC,kBAAkB;IAC9B,QAAQ,EAAE,kBAAC0F,CAAC,EAAK;MACftF,YAAY,CAACsF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC9B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,eACF;IACE,IAAI,EAAC,MAAM;IACX,EAAE,EAAC,UAAU;IACb,SAAS,EAAC,UAAU;IACpB,WAAW,EAAC,iBAAiB;IAC7B,QAAQ,EAAE,kBAACJ,CAAC,EAAK;MACfpF,WAAW,CAACoF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC7B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CACE,CAET,CACA;AAEP,CAAC;AAED,eAAe/F,GAAG"},"metadata":{},"sourceType":"module"}